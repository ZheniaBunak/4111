
class MyException(Exception):
    def __str__(self):
        return '–¶–µ –º—ñ–π –≤–∏–π–Ω—è—Ç–æ–∫!)üòä'


def raiser(n: int):
    match n:
        case 1:
            raise ValueError
        case 2:
            raise ZeroDivisionError
        case 3:
            raise IndexError('–¶–µ –º—ñ–π –≤–ª–∞—Å–Ω–∏–π IndexError')
        case 4:
            raise KeyError
        case 5:
            raise KeyboardInterrupt
        case 6:
            raise MyException


try:


    n1 = int(input('–í–≤–µ–¥—ñ—Ç—å —á–∏—Å–ª–æ 1:'))
    n2 = int(input('–í–≤–µ–¥—ñ—Ç—å —á–∏—Å–ª–æ 2:'))

    result = n1 / n2

except ZeroDivisionError:
    print('–¢–∏ –Ω–µ –º–æ–∂—à—å –¥—ñ–ª–∏—Ç–∏ –Ω–∞  0')
except ValueError:
    print('–¢–∏ –≤–ø–∏—Å–∞–≤ –Ω–µ —á–∏—Å–ª–æ')
except Exception as exc:
  print(f'–°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞: {exc}')
else:
    print(result)
finally:
    print('finally')